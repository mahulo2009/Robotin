# A fast, interpolated global planner built as a more 
#flexible replacement to navfn
base_global_planner: global_planner/GlobalPlanner

# DWA samples from the set of achievable velocities 
#for just one simulation step given the acceleration 
#limits of the robot
base_local_planner: dwa_local_planner/DWAPlannerROS

#The rate in Hz at which to run the control loop and send 
#velocity commands to the base.
controller_frequency: 5.0 

#How long the controller will wait in seconds without 
#receiving a valid control before space-clearing operations 
#are performed.
controller_patience: 3.0

#The rate in Hz at which to run the global planning loop. 
#If the frequency is set to 0.0, the global planner will 
#only run when a new goal is received or the local planner 
#reports that its path is blocked.
planner_frequency: 0.5

#How long the planner will wait in seconds in an attempt 
#to find a valid plan before space-clearing operations are performed.
planner_patience: 5.0

#How long in seconds to allow for oscillation before executing 
#recovery behaviors. A value of 0.0 corresponds to an infinite timeout.
oscillation_timeout: 10.0

#How far in meters the robot must move to be considered 
#not to be oscillating. Moving this far resets the timer 
#counting up to the ~oscillation_timeout
oscillation_distance: 0.2


#The distance away from the robot in meters beyond 
#which obstacles will be cleared from the costmap when attempting 
#to clear space in the map. Note, this parameter is only 
#used when the default recovery behaviors are used for move_base
conservative_reset_dist: 0.1






